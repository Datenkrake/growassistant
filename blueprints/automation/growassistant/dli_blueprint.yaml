blueprint:
  name: Light Intensity Control Blueprint
  description: Adjusts light intensity based on DLI setpoint using a PID controller.
  domain: automation
  input:
    # Entities related to light intensity control
    light_intensity_max:
      name: Maximum Light Intensity
      selector:
        entity:
          domain: input_number
    dli_target:
      name: DLI Target
      selector:
        entity:
          domain: sensor
    dli_current:
      name: DLI Current
      selector:
        entity:
          domain: sensor
    previous_error:
      name: Previous DLI Error
      selector:
        entity:
          domain: input_number
    Kp_dli:
      name: Proportional Term (Kp)
      selector:
        entity:
          domain: input_number
    Ki_dli:
      name: Integral Term (Ki)
      selector:
        entity:
          domain: input_number
    Kd_dli:
      name: Derivative Term (Kd)
      selector:
        entity:
          domain: input_number
    dt_dli:
      name: Time Interval (dt)
      selector:
        entity:
          domain: input_number
    light_intensity_door_open:
      name: Light Intensity when Door is Open
      selector:
        entity:
          domain: input_number
    light_entity:
      name: Light Entity (Canopy Light)
      selector:
        entity:
          domain: light
    qbar1_pwm:
      name: QBar 1 PWM Light
      selector:
        entity:
          domain: light
    qbar2_pwm:
      name: QBar 2 PWM Light
      selector:
        entity:
          domain: light
    water_door_switch:
      name: Water Door Switch
      selector:
        entity:
          domain: binary_sensor
    dayphase_target:
      name: Dayphase Target Sensor
      selector:
        entity:
          domain: sensor
    global_enable:
      name: Global Enable
      selector:
        entity:
          domain: input_boolean
    light_intensity_control_enable:
      name: Light Intensity Control Enable
      selector:
        entity:
          domain: input_boolean
    service_mode:
      name: Service Mode
      selector:
        entity:
          domain: input_boolean
    integral_dli:
      name: Integral DLI
      selector:
        entity:
          domain: input_number

trigger:
  - platform: time_pattern
    seconds: "/30"

condition:
  - condition: state
    entity_id: !input global_enable
    state: 'on'
  - condition: state
    entity_id: !input light_intensity_control_enable
    state: 'on'
  - condition: state
    entity_id: !input service_mode
    state: 'off'

action:
  - variables:
      light_intensity_max: "{{ states('!input light_intensity_max') | float(0) }}"
      dli_target: "{{ states('!input dli_target') | float(0) }}"
      dli_current: "{{ states('!input dli_current') | float(0) }}"
      previous_error: "{{ states('!input previous_error') | float(0) }}"
      Kp: "{{ states('!input Kp_dli') | float(0) }}"
      Ki: "{{ states('!input Ki_dli') | float(0) }}"
      Kd: "{{ states('!input Kd_dli') | float(0) }}"
      dt: "{{ states('!input dt_dli') | float(0) }}"
      d_dli_target: "{{ dli_current - dli_target }}"
      integral: "{{ states('!input integral_dli') | float(0) + (d_dli_target * dt) }}"
      derivative: "{{ Kd * (d_dli_target - previous_error) / dt }}"
      control: "{{ Kp * d_dli_target + Ki * integral + derivative }}"
      light_intensity: "{{ (state_attr('!input light_entity', 'brightness') | float(0)) / 255 }}"
      light_intensity_new: >
        {% set new_intensity = light_intensity - control %}
        {% if new_intensity > light_intensity_max %}
          {{ (light_intensity_max * 255) | int }}
        {% elif new_intensity < 0 %}
          {{ 0 }}
        {% else %}
          {{ (new_intensity * 255) | int }}
        {% endif %}
      door_state: "{{ states('!input water_door_switch') }}"
      light_intensity_door_open: "{{ states('!input light_intensity_door_open') | int }}"
      dayphase_target: "{{ states('!input dayphase_target') | int }}"
      final_light_intensity: >
        {% if dayphase_target == 1 %}
          {% if door_state == 'on' %}
            {{ light_intensity_door_open }}
          {% else %}
            {{ light_intensity_new }}
          {% endif %}
        {% else %}
          {{ 0 }}
        {% endif %}

  - choose:
    - conditions:
        condition: template
        value_template: "{{ final_light_intensity == 0 }}"
      sequence:
        - service: light.turn_off
          target:
            entity_id: !input qbar1_pwm
        - service: light.turn_off
          target:
            entity_id: !input qbar2_pwm
    - conditions:
        condition: template
        value_template: "{{ final_light_intensity != 0 }}"
      sequence:
        - service: light.turn_on
          target:
            entity_id: !input qbar1_pwm
          data:
            brightness: "{{ final_light_intensity }}"
        - service: light.turn_on
          target:
            entity_id: !input qbar2_pwm
          data:
            brightness: "{{ final_light_intensity }}"

  - service: input_number.set_value
    data:
      entity_id: !input previous_error
      value: "{{ d_dli_target }}"

  - service: input_number.set_value
    data:
      entity_id: !input integral_dli
      value: "{{ [100, [-100, integral] | max] | min }}"

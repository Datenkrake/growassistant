blueprint:
  name: Timelapse Automation Blueprint
  description: Takes a snapshot from a camera at a specified interval and stores it in the system.
  domain: automation
  input:
    global_enable:
      name: Global Enable
      selector:
        entity:
          domain: input_boolean

    timelapse_enable:
      name: Timelapse Enable
      selector:
        entity:
          domain: input_boolean

    timelapse_period:
      name: Timelapse Period
      selector:
        entity:
          domain: input_number

    canopy_illumination:
      name: Canopy Illumination Sensor
      selector:
        entity:
          domain: sensor

    water_door_switch:
      name: Water Door Switch
      selector:
        entity:
          domain: binary_sensor

    camera_entity:
      name: Camera Entity
      selector:
        entity:
          domain: camera

    last_timelapse:
      name: Last Timelapse Timestamp
      selector:
        entity:
          domain: input_datetime

trigger:
  - platform: time_pattern
    minutes: "/1"

condition:
  - condition: template
    value_template: >
      {{ (now().timestamp() // 60) % states('!input timelapse_period') | int == 0 }}
  - condition: state
    entity_id: !input global_enable
    state: 'on'
  - condition: state
    entity_id: !input timelapse_enable
    state: 'on'
  - condition: numeric_state
    entity_id: !input timelapse_period
    above: '0'
  - condition: numeric_state
    entity_id: !input canopy_illumination
    above: 100
  - condition: state
    entity_id: !input water_door_switch
    state: 'off'

action:
  - service: camera.snapshot
    data:
      entity_id: !input camera_entity
      filename: "/config/www/timelapse/{{ now().strftime('%Y%m%d_%H%M%S') }}.jpg"

  - service: input_datetime.set_datetime
    data:
      entity_id: !input last_timelapse
      time: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"

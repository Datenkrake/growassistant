# This automation control the light intensity of the grow light (DLI) based on the DLI setpoint
# All light intensity values are in percentage and changed equally
# The light intensity is adjusted every minute based on the DLI setpoint and the current DLI
# The new setpoint is calculated using a PID controller

alias: Light Intensity Control
id: 'automations_light_intensity'
description: 'This automation adjusts the light intensity based on the DLI setpoint'
trigger:
  - platform: time_pattern
    seconds: "/1"
condition:
  - condition: state
    entity_id: input_boolean.global_enable
    state: 'on'
  - condition: state
    entity_id: input_boolean.light_intensity_control_enable
    state: 'on'
  - condition: state
    entity_id: input_boolean.service_mode
    state: 'off'

action:
  - variables:
      dli_target: "{{ states('input_number.dli_target') | float }}"
      dli_current: "{{ states('sensor.dli') | float }}"
      previous_error: "{{ states('input_number.previous_dli_error') | float(0) }}"
      Kp: 1
      Ki: 1
      Kd: 1
      dt: 1
      d_dli_target: "{{ dli_current - dli_target }}"
      integral: "{{ states('input_number.integral_dli') | float(0) + (d_dli_target * dt) | abs }}"
      integral_limit: 0.05
      integral_clamped: "{{ [integral_limit, integral] | min }}"
      derivative: "{{ Kd * (d_dli_target - previous_error) / dt | abs }}"
      control: "{{ Kp * d_dli_target | abs + Ki * integral_clamped + derivative | abs }}"
      light_intensity: "{{ (state_attr('light.g1_canopy_light', 'brightness') | float(0)) / 255 }}"
      light_intensity_new: "{{ [0, [1, light_intensity + control] | min] | max * 255 | int }}"
      door_state: "{{ states('binary_sensor.g1_water_door_switch') }}"
      light_intensity_door_open: "{{ states('input_number.light_intensity_door_open') | int }}"
      # if the door is open, set the light intensity to light_intensity_door_open
      light_intensity_new: "{{ light_intensity_door_open if door_state == 'on' else light_intensity_new }}"
  - service: light.turn_on
    target:
      entity_id: light.g1_qbar1_pwm_qbar1
    data:
      brightness: "{{ light_intensity_new }}"
  - service: light.turn_on
    target:
      entity_id: light.g1_qbar2_pwm_qbar2
    data:
      brightness: "{{ light_intensity_new }}"

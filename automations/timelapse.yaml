
# This automation will take a snapshot of the camera every n minutes (n = timelapse_period) and store it in the influxdb database
# The timelapse_period is a global variable that can be changed in the frontend
# The timelapse_period is defined in the input_numbers.yaml file

# The automation will only run if the global_enable input_boolean is on
# The global_enable input_boolean is defined in the input_bools.yaml file

# The automation will only run if the timelapse_enable input_boolean is on
# The timelapse_enable input_boolean is defined in the input_bools.yaml file

# The automation will only run if the timelapse_period is greater than 0
# The timelapse_period is defined in the input_numbers.yaml file

# The automation will confirm that the light is on before taking the snapshot
# The automation will confirm that the light is in photolist_mode before taking the snapshot

# The automation will take a snapshot of the camera
# The camera entity is defined in the input_text_devices.yaml file as canopy_camera

# The automation will store the snapshot in the influxdb database
# The influxdb database is defined in the configuration.yaml file
# The format is base64 encoded

# The automation will set the last_timelapse timestamp to the current time
# The last_timelapse timestamp is defined in the input_datetime.yaml file

alias: Timelapse
id: 'automations_timelapse'
description: ''
trigger:
  - platform: time_pattern
    minutes: "/1"  # Run every minute
condition:
  - condition: template
    value_template: >
      {{ (now().timestamp() // 60) % states('input_number.timelapse_period') | int == 0 }}
  # Only run if global_enable is on
  - condition: state
    entity_id: input_boolean.global_enable
    state: 'on'
  # Only run if timelapse_enable is on
  - condition: state
    entity_id: input_boolean.timelapse_enable
    state: 'on'
  # Only run if timelapse_period is greater than 0
  - condition: numeric_state
    entity_id: input_number.timelapse_period
    above: '0'
  # Only run if the light is on (i.e., canopy_illumination > 100 lux)
  - condition: numeric_state
    entity_id: sensor.g1_canopy_g1_bh1750_illuminance
    above: 100
  # Only run if the door is closed
  - condition: state
    entity_id: binary_sensor.g1_water_door_switch
    state: 'off'
action:
  - service: camera.snapshot
    data:
      entity_id: camera.g1_cam_my_camera
      filename: "/config/www/timelapse/{{ now().strftime('%Y%m%d_%H%M%S') }}.jpg"
  - service: input_datetime.set_datetime
    data:
      entity_id: input_datetime.last_timelapse
      time: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"




# sensors: [
#   'sensor.g1_canopy_bme680_humidity',
#   'sensor.g1_wind_canopy_humidity',
#   'sensor.g1_intake_bme680_humidity',
#   'sensor.g1_canopy_bme680_temperature',
#   'sensor.g1_wind_canopy_temperature',
#   'sensor.g1_intake_bme680_temperature'
# ]

alias: 'Set Restart Flag on Sensor Failure'
id: "automations_sensor_validation"
trigger:
  - platform: time_pattern
    minutes: '/1'  # Check every minute
action:
  - variables:
      sensors:
        - 'sensor.g1_canopy_bme680_temperature'
      failure_threshold: 3  # Number of consecutive failures allowed
  - choose:
      - conditions: >
          {% set ns = namespace(failed_count = 0) %}
          {% for sensor in sensors %}
            {% set state = states(sensor) %}
            {% if state in ['unavailable', 'unknown', 'none'] or
                  (as_timestamp(now()) - as_timestamp(states[sensor].last_updated)) >= 600 %}
              {% set ns.failed_count = ns.failed_count + 1 %}
            {% endif %}
          {% endfor %}
          {{ ns.failed_count >= failure_threshold }}
        sequence:
          - service: input_boolean.turn_on
            entity_id: input_boolean.g1_restart_flag
      - default:
          - service: input_boolean.turn_off
            entity_id: input_boolean.g1_restart_flag

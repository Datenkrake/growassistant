esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Enable Home Assistant API
# api:
#   encryption:
#     key: "+j+okthzC9Bih061sZ0fVzfc7J79eZZv1yO7bZFmzE8="

ota:
  - platform: esphome
    password: "f2f855f8e0b8d178f386c3f8773972f7"

esphome:
  name: g2-intake
  area: ${area_id}

####################################################################
# configure substitutions and friendly name
####################################################################

  friendly_name: ${area_id}_INTAKE${suffix}

substitutions:
  area_id: G2
  device_id: "INTAKE"
  suffix: ""
  pin_fan1_pwm: GPIO3
  pin_sda: GPIO2
  pin_scl: GPIO1
  address_bme680: "0x77"
  bme680_temp_offset: "1.5"

####################################################################
# generic yaml for humidifiers below
####################################################################
logger:
captive_portal:
wifi:
  !include includes/wifi_default.yaml

globals:
  - id: ${area_id}_${device_id}${suffix}_fan1_pwm_value
    type: float
    restore_value: no
    initial_value: '0.0'
  - id: ${area_id}_${device_id}${suffix}_door_open
    type: bool
    restore_value: no
    initial_value: 'false'

mqtt:
  broker: !secret mqtt_broker
  username: !secret mqtt_username
  password: !secret mqtt_password
  topic_prefix: "${area_id}/${device_id}"
  log_topic: "debug/${area_id}/${device_id}"
  on_message:
    - topic: ${area_id}/door_switch/#
      then:
        - lambda: |-
            if (strcmp(x.c_str(), "ON") == 0) {
              id(${area_id}_${device_id}${suffix}_door_open) = true;
            } else if (strcmp(x.c_str(), "OFF") == 0) {
              id(${area_id}_${device_id}${suffix}_door_open) = false;
            }
            id(update_intake_fan_speed).execute();

output:
  - platform: ledc
    pin: ${pin_fan1_pwm}
    id: ${area_id}_${device_id}${suffix}_fan1_pwm
    frequency: 25000 Hz
    inverted: True

fan:
  - platform: speed
    output: ${area_id}_${device_id}${suffix}_fan1_pwm
    name: "Intake"
    id: ${area_id}_${device_id}${suffix}_intake_fan

i2c:
  !include includes/i2c_bus_a.yaml
bme68x_bsec2_i2c:
  !include includes/bme680x_bsec2_i2c.yaml
  
sensor:
  # physical sensors
  - !include includes/sensor_bme68x_bsec2.yaml
  #calculated sensors
  - !include includes/sensor_vpd.yaml
  - !include includes/sensor_dew_point.yaml
  # mqtt sensors
  - !include includes/sensor_mqtt_vpd_leaf_offset.yaml
  - !include includes/sensor_mqtt_temperature_max.yaml
  - !include includes/sensor_mqtt_canopy_rh_target.yaml
  - !include includes/sensor_mqtt_gantry_rh_target.yaml
  - !include includes/sensor_mqtt_canopy_humidity.yaml
  - !include includes/sensor_mqtt_gantry_humidity.yaml
  - !include includes/sensor_mqtt_canopy_temperature.yaml
  - !include includes/sensor_mqtt_gantry_temperature.yaml
    
number:
  - !include includes/number_fan_speed_min.yaml
  - !include includes/number_fan_speed_max.yaml

interval:
  - interval: 60s
    then:
      - script.execute: update_intake_fan_speed

script:
- !include includes/script_update_intake_fan_speed.yaml

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Enable Home Assistant API
# api:
#   encryption:
#     key: "qwHe3/tI5GAL34g4BySb8Mvzv26WNyzSsgS18Dx/oH0="

ota:
  - platform: esphome
    password: "0b45c8de2cc7e8951f42ac3bdaa7e4f6"

esphome:
  name: g1-wind

####################################################################
# configure substitutions and friendly name
####################################################################

  area: ${area_id}
  friendly_name: ${area_id}_${device_id}${suffix}

substitutions:
  area_id: G1
  device_id: "GANTRY"
  suffix: ""
  pin_sda: GPIO21
  pin_scl: GPIO20
  pin_fan1_pwm: GPIO7
  pin_fan2_pwm: GPIO8
  sgp4x_address: "0x59"
  #address_bme680: "0x76"
  #bme680_temp_offset: "2.5"

####################################################################
# generic yaml for humidifiers below
####################################################################
logger:
captive_portal:
wifi:
  !include includes/wifi_default.yaml

globals:
  - id: ${area_id}_${device_id}${suffix}_fan_speed_step
    type: int
    restore_value: no
    initial_value: '0'
  - id: ${area_id}_${device_id}${suffix}_door_open
    type: bool
    restore_value: no
    initial_value: 'false'

mqtt:
  broker: !secret mqtt_broker
  username: !secret mqtt_username
  password: !secret mqtt_password
  topic_prefix: "auto/${area_id}/${device_id}"
  log_topic: "debug/${area_id}/${device_id}"
  on_message:
    - topic: ${area_id}/door_switch/#
      then:
        - lambda: |-
            if (strcmp(x.c_str(), "ON") == 0) {
              id(${area_id}_${device_id}${suffix}_door_open${suffix}) = true;
            } else if (strcmp(x.c_str(), "OFF") == 0) {
              id(${area_id}_${device_id}${suffix}_door_open${suffix}) = false;
            }
            id(update_wind_fan_speed).execute();

output:
  - platform: ledc
    pin: GPIO7
    id: ${area_id}_${device_id}${suffix}_fan1_pwm
    frequency: 15000 Hz
    inverted: True

  - platform: ledc
    pin: GPIO8
    id: ${area_id}_${device_id}${suffix}_fan2_pwm
    frequency: 15000 Hz
    inverted: True

fan:
  - platform: speed
    output: ${area_id}_${device_id}${suffix}_fan1_pwm
    name: "Wind"
    id: ${area_id}_${device_id}${suffix}_fan1
    state_topic: "${area_id}/fan/state/${device_id}"
    speed_state_topic: "${area_id}/fan/speed/${device_id}"
    command_topic: "${area_id}/${device_id}/fan/state/${device_id}/set"
    speed_command_topic: "${area_id}/fan/speed/${device_id}/set"

  - platform: speed
    output: ${area_id}_${device_id}${suffix}_fan2_pwm
    name: "Wind"
    id: ${area_id}_${device_id}${suffix}_fan2
    state_topic: "${area_id}/fan/state/${device_id}"
    speed_state_topic: "${area_id}/fan/speed/${device_id}"
    command_topic: "${area_id}/${device_id}/fan/state/${device_id}/set"
    speed_command_topic: "${area_id}/fan/speed/${device_id}/set"

i2c:
  !include includes/i2c_bus_a.yaml

# Example configuration entry
sensor:
  # physical sensors
  - !include includes/sensor_sgp4x.yaml
  - !include includes/sensor_htu21d.yaml
  # calculated sensors
  - !include includes/sensor_vpd.yaml
  - !include includes/sensor_rh_target.yaml
  - !include includes/sensor_dew_point.yaml
  # mqtt sensors
  - !include includes/sensor_mqtt_vpd_leaf_offset.yaml
  - !include includes/sensor_mqtt_vpd_target.yaml

number:
  - !include includes/number_fan_speed_min.yaml
  - !include includes/number_fan_speed_max.yaml
  - !include includes/number_wind_sweep_duration.yaml

interval:
  - interval: 60s
    then:
      - script.execute: update_wind_fan_speed
  - interval: 60s
    then:
      - script.execute: ${area_id}_${device_id}${suffix}_pubish_wind_fan1_speed

script:
  - !include includes/script_update_wind_fan_speed.yaml

  - id: ${area_id}_${device_id}${suffix}_pubish_wind_fan1_speed
    then:
      - mqtt.publish:
          topic: "${area_id}/fan/speed/${device_id}"
          payload: !lambda |-
            return id(${area_id}_${device_id}${suffix}_fan1_pwm).value;
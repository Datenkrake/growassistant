esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Enable Home Assistant API
# api:
#   encryption:
#     key: "MyJ+A4snnb13Hhjtvzq5lpRLdvDePmLcLwOYc/IVnXE="

ota:
  - platform: esphome
    password: "ecf5a31fa356f2d267c8f046e257160c"

esphome:
  name: g1-humidifier

####################################################################
# configure substitutions and friendly name
####################################################################

  area: ${area_id}
  friendly_name: ${area_id}_${device_id}${suffix}

# Note for pinout on ESP32-C3 Supermini:
# Pin Functions
# GPIO0 / A0 (bottom right corner in top view with USB port on the top)
# GPIO1 / A1
# GPIO2 / A2 (external pull-up resistor and is a boot related pin)
# GPIO3 / A3
# GPIO4 / A4 / SCK
# GPIO5 / A5 / MISO
# GPIO6 / MOSI
# GPIO7 / SS
# GPIO8 / SDA
# GPIO9 / SCL (external pull-down resistor and is a boot related pin "BOOT button")
# GPIO10
# GPIO20 / RX
# GPIO21 / TX

substitutions:
  area_id: G1
  device_id: "HUMIDIFIER"
  suffix: ""
  pin_humidifier_pwm_output: GPIO21

####################################################################
# generic yaml for humidifiers below
####################################################################
logger:
captive_portal:
wifi:
  !include includes/wifi_default.yaml

output:
  - platform: slow_pwm
    pin: ${pin_humidifier_pwm_output}
    id: ${area_id}_${device_id}${suffix}_pwm_output
    period: 10s

fan:
  - platform: speed
    output: ${area_id}_${device_id}${suffix}_pwm_output
    name: "Humidifier [${area_id}_${device_id}${suffix}]"
    id: ${area_id}_${device_id}${suffix}_humidifier
    state_topic: "${area_id}/fan/state/${device_id}"
    speed_state_topic: "${area_id}/fan/speed/${device_id}"
    command_topic: "${area_id}/${device_id}/fan/state/${device_id}/set"
    speed_command_topic: "${area_id}/fan/speed/${device_id}/set"
    speed_count: 100  # Set the speed steps (0-100%)

sensor:
  - !include includes/sensor_mqtt_canopy_humidity.yaml
  - !include includes/sensor_mqtt_canopy_rh_target.yaml
  - !include includes/sensor_mqtt_gantry_humidity.yaml
  - !include includes/sensor_mqtt_gantry_rh_target.yaml

switch:
  - !include includes/switch_enable.yaml

globals:
  - id: ${area_id}_${device_id}${suffix}_door_open
    type: bool
    restore_value: no
    initial_value: 'false'

mqtt:
  broker: !secret mqtt_broker
  username: !secret mqtt_username
  password: !secret mqtt_password
  topic_prefix: "auto/${area_id}/${device_id}"
  log_topic: "debug/${area_id}/${device_id}"
  on_message:
    - topic: ${area_id}/door_switch/#
      then:
        - lambda: |-
            if (strcmp(x.c_str(), "ON") == 0) {
              id(${area_id}_${device_id}${suffix}_door_open) = true;
            } else if (strcmp(x.c_str(), "OFF") == 0) {
              id(${area_id}_${device_id}${suffix}_door_open) = false;
            }
            id(update_humidifier_speed).execute();

interval:
  - interval: 60s
    then:
      - script.execute: update_humidifier_speed
      - script.execute: pubish_humidifier_speed
      - script.execute: publish_humidifier_speed_govee

script:
  - !include includes/script_update_humidifier_speed.yaml

  - id: pubish_humidifier_speed
    then:
      - mqtt.publish:
          topic: "${area_id}/fan/speed/${device_id}"
          payload: !lambda |-
            return std::to_string(id(${area_id}_${device_id}${suffix}_humidifier).speed);

  - id: publish_humidifier_speed_govee
    then:
      - mqtt.publish:
          topic: "gv2mqtt/humidifier/119F1091A84F5C74/set-target"
          payload: !lambda |-
            float rh_target = id(${area_id}_${device_id}${suffix}_canopy_rh_target).state;
            int speed = id(${area_id}_${device_id}${suffix}_humidifier).speed;
            int result = static_cast<int>(rh_target + speed - 20);
            if (result < 40) result = 40;
            if (result > 80) result = 80;
            return std::to_string(result);
esphome:
  name: g1-humidifier
  friendly_name: G1_HUMIDIFIER

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
# api:
#   encryption:
#     key: "MyJ+A4snnb13Hhjtvzq5lpRLdvDePmLcLwOYc/IVnXE="

ota:
  - platform: esphome
    password: "ecf5a31fa356f2d267c8f046e257160c"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "G1-Humidifier Fallback Hotspot"
    password: "ngvELfWsYHo8"

captive_portal:
    
mqtt:
  broker: !secret mqtt_broker
  username: !secret mqtt_username
  password: !secret mqtt_password
  topic_prefix: "g1/humidifier"

output:
  - platform: slow_pwm
    pin: GPIO21
    id: humidifier_pwm_output
    period: 10s

fan:
  - platform: speed
    output: humidifier_pwm_output
    name: "Humidifier"
    id: humidifier_fan
    speed_count: 100  # Set the speed steps (0-100%)


sensor:
  - platform: mqtt_subscribe
    name: "Canopy RH"
    id: canopy_rh
    topic: "g1/canopy/sensor/humidity/state"
    unit_of_measurement: "%"
    qos: 1

  - platform: mqtt_subscribe
    name: "Canopy RH Target"
    id: canopy_rh_target
    topic: "g1/canopy/sensor/rh_target/state"
    unit_of_measurement: "%"
    qos: 1

  - platform: mqtt_subscribe
    name: "Gantry RH"
    id: gantry_rh
    topic: "g1/gantry/sensor/humidity/state"
    unit_of_measurement: "%"
    qos: 1

  - platform: mqtt_subscribe
    name: "Gantry RH Target"
    id: gantry_rh_target
    topic: "g1/gantry/sensor/rh_target/state"
    unit_of_measurement: "%"
    qos: 1

  - platform: mqtt_subscribe
    name: "Humidifier Enable"
    id: humidifier_enable
    topic: "g1/humidifier/enable"
    unit_of_measurement: ""
    qos: 1

interval:
  - interval: 30s
    then:
      - lambda: |-
          if (id(humidifier_enable).state == 1.0f) {
            float _canopy_rh_target = id(canopy_rh_target).state;
            float _gantry_rh_target = id(gantry_rh_target).state;
            float rh_target = !std::isnan(_canopy_rh_target) ? _canopy_rh_target : _gantry_rh_target;
            float rh = !std::isnan(id(canopy_rh).state) ? id(canopy_rh).state : id(gantry_rh).state;
            
            float current_speed = id(humidifier_fan).speed;
            
            if (rh_target > rh) {
              id(humidifier_fan).speed = std::min(current_speed + 0.01f, 1.0f);
            } else if (rh_target < rh) {
              id(humidifier_fan).speed = std::max(current_speed - 0.02f, 0.0f);
            }
          } else {
            id(humidifier_fan).speed = 0.0f;  // Turn off humidifier if it's disabled
          }

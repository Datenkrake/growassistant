platform: mqtt_subscribe
name: "Full Spectrum Brightness JSON [${area_id}_${device_id}${suffix}]"
id: ${area_id}_${device_id}${suffix}_current_brightness_text_sensor  # Ensure this ID matches
topic: "${area_id}/light/dimmer/rpc"
on_value:
    then:
        - lambda: |-
            // Parse the JSON payload
            DynamicJsonDocument doc(512); // JSON buffer size
            auto error = deserializeJson(doc, x.c_str()); // Deserialize the JSON
            if (error) {
                ESP_LOGW("main", "Failed to parse JSON: %s", error.c_str());
                return;
            }

            // Navigate to "params" and check for "brightness"
            if (doc["params"].containsKey("brightness")) {
                int brightness = doc["params"]["brightness"].as<int>();

                // Convert brightness to a floating-point percentage and publish
                id(${area_id}_${device_id}${suffix}_full_spectrum_brightness).publish_state(brightness / 100.0f);
            } else {
                ESP_LOGW("main", "Brightness key not found in 'params'.");
            }

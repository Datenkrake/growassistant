esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
#api:
#  encryption:
#    key: "PL+ZpVXlwzG1ULZmW6Ihfjba1TeiwUUEyO4F4OufSdw="

ota:
  - platform: esphome
    password: "9abadbaf72933c83420c3ca7e1a2c041"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "G3-Lower Fallback Hotspot"
    password: "vDhLUdAG528c"

captive_portal:


esphome:
  name: g3-lower

####################################################################
# configure substitutions and friendly name
####################################################################

  area: ${area_id}
  friendly_name: ${area_id}_${device_id}${suffix}

# Note for pinout on ESP32-C3 Supermini:
# Pin Functions
# GPIO0 / A0 (bottom right corner in top view with USB port on the top)
# GPIO1 / A1
# GPIO2 / A2 (external pull-up resistor and is a boot related pin)
# GPIO3 / A3
# GPIO4 / A4 / SCK
# GPIO5 / A5 / MISO
# GPIO6 / MOSI
# GPIO7 / SS
# GPIO8 / SDA
# GPIO9 / SCL (external pull-down resistor and is a boot related pin "BOOT button")
# GPIO10
# GPIO20 / RX
# GPIO21 / TX

substitutions:
  area_id: G3D
  device_id: "BRAIN"
  suffix: ""
  pin_sda: GPIO6
  pin_scl: GPIO7
  pin_fan1_pwm: GPIO9
  pin_fan2_pwm: GPIO8
  pin_irrigation_output: GPIO5
  address_sht4x: "0x44"

####################################################################
# generic yaml below
####################################################################
mqtt:
  broker: !secret mqtt_broker
  username: !secret mqtt_username
  password: !secret mqtt_password
  topic_prefix: "auto/${area_id}/${device_id}"
  log_topic: "debug/${area_id}/${device_id}"

time:
  - !include includes/time_mqtt.yaml

i2c:
  !include includes/i2c_bus_a.yaml

globals:
  - id: heater_should_be_on
    type: bool
    restore_value: no
    initial_value: 'false'
  - id: condenser_should_be_on
    type: bool
    restore_value: no
    initial_value: 'false'
  - id: ${area_id}_${device_id}${suffix}_exhaust_fan_pwm_value
    type: float
    restore_value: no
    initial_value: '0.0'
  - id: ${area_id}_${device_id}${suffix}_fan_speed_step
    type: int
    restore_value: no
    initial_value: '0'
  - id: G3D_BRAIN_target_temp
    type: float
    restore_value: no
    initial_value: '0.0'
  - id: G3D_BRAIN_target_humidity
    type: float
    restore_value: no
    initial_value: '0.0'
  - id: G3D_TEMP_BUMP
    type: float
    restore_value: yes
    initial_value: '0.0'
    
output:
  - platform: ledc
    pin: ${pin_fan1_pwm}
    id: ${area_id}_${device_id}${suffix}_exhaust_pwm
    frequency: 15000 Hz
    inverted: True
    max_power: 1.0
  - platform: ledc
    pin: ${pin_fan2_pwm}
    id: ${area_id}_${device_id}${suffix}_circulation_pwm
    frequency: 15000 Hz
    inverted: True
    max_power: 1.0

fan:
  - platform: speed
    output: ${area_id}_${device_id}${suffix}_exhaust_pwm
    name: "Exhaust Fan [${area_id}${suffix}]"
    id: ${area_id}_${device_id}${suffix}_exhaust
    state_topic: "${area_id}/fan/state/EXHAUST"
    speed_state_topic: "${area_id}/fan/speed/EXHAUST"
    command_topic: "${area_id}/${device_id}/fan/state/EXHAUST/set"
    speed_command_topic: "${area_id}/fan/speed/EXHAUST/set"
    restore_mode: ALWAYS_ON  # Options: ALWAYS_OFF, ALWAYS_ON, RESTORE_DEFAULT_OFF, RESTORE_DEFAULT_ON, RESTORE_INVERTED_DEFAULT_OFF, RESTORE_INVERTED_DEFAULT_ON
    on_turn_on:
      - fan.turn_on:
          id: ${area_id}_${device_id}${suffix}_exhaust
          speed: 80
  - platform: speed
    output: ${area_id}_${device_id}${suffix}_circulation_pwm
    name: "Circulation Fan [${area_id}${suffix}]"
    id: ${area_id}_${device_id}${suffix}_circulation
    state_topic: "${area_id}/fan/state/CIRCULATION"
    speed_state_topic: "${area_id}/fan/speed/CIRCULATION"
    command_topic: "${area_id}/${device_id}/fan/state/CIRCULATION/set"
    speed_command_topic: "${area_id}/fan/speed/CIRCULATION/set"
    restore_mode: ALWAYS_ON  # Options: ALWAYS_OFF, ALWAYS_ON, RESTORE_DEFAULT_OFF, RESTORE_DEFAULT_ON, RESTORE_INVERTED_DEFAULT_OFF, RESTORE_INVERTED_DEFAULT_ON
    on_turn_on:
      - fan.turn_on:
          id: ${area_id}_${device_id}${suffix}_exhaust
          speed: 50
    

sensor:
  # PHYSICAL SENSORS
  ## TEMPERATURE, HUMIDITY
  - platform: sht3xd
    temperature:
        name: "Temperature SHT [${area_id}_${device_id}${suffix}]"
        id: ${area_id}_${device_id}${suffix}_temperature
        state_topic: "${area_id}/temperature/state/SHT"
        filters:
          - median:
              window_size: 5  # Adjust as needed to remove outliers
              send_every: 1
          - sliding_window_moving_average:
              window_size: 10  # 10 samples at 1s intervals = 10s average
              send_every: 1
    humidity:
        name: "Humidity SHT [${area_id}_${device_id}${suffix}]"
        id: ${area_id}_${device_id}${suffix}_humidity
        state_topic: "${area_id}/humidity/state/SHT"
        filters:
          - median:
              window_size: 5  # Adjust as needed to remove outliers
              send_every: 1
          - sliding_window_moving_average:
              window_size: 10  # 10 samples at 1s intervals = 10s average
              send_every: 1
    address: ${address_sht4x}
    update_interval: 1s
  # CALCULATED SENSORS
  ## CLIMATE
  - platform: template
    name: "VPD [${area_id}_${device_id}${suffix}]"
    id: ${area_id}_${device_id}${suffix}_vpd
    state_topic: "${area_id}/vpd/state/${device_id}"
    unit_of_measurement: "kPa"
    update_interval: 10s
    accuracy_decimals: 2
    lambda: |
        float LT = id(${area_id}_${device_id}${suffix}_temperature).state;
        float rh = id(${area_id}_${device_id}${suffix}_humidity).state;
        float ASVP = 610.78 * exp((LT / (LT + 237.3)) * 17.2694);
        float LSVP = 610.78 * exp((LT / (LT + 237.3)) * 17.2694);
        float LVPD = (LSVP - (ASVP * (rh / 100.0))) / 1000.0;
        return LVPD;
    
  - !include includes/sensor_dew_point.yaml

switch:
  - !include includes/switch_enable.yaml
  - !include includes/switch_irrigation_pump.yaml

number:
  - !include includes/number_start_date.yaml
  - !include includes/number_irrigation_period.yaml
  - !include includes/number_irrigation_duration.yaml
interval:
  - interval: 10s
    then:
      - script.execute: adjust_fridge
  - interval: 60s
    then:
      - script.execute: ${area_id}_${device_id}${suffix}_publish_exhaust_fan_speed
  - interval: 3600s
    then:
      - script.execute: irrigate
    
script:
  - !include includes/script_adjust_fridge.yaml

  - id: ${area_id}_${device_id}${suffix}_publish_exhaust_fan_speed
    then:
      - mqtt.publish:
          topic: "${area_id}/fan/speed/EXHAUST"
          payload: !lambda 'return std::to_string(id(${area_id}_${device_id}${suffix}_exhaust).speed);'

  - id: irrigate
    then:
      - if:
          condition:
            lambda: |
              return id(${area_id}_${device_id}${suffix}_enable).state;
          then:
            - switch.turn_on: ${area_id}_${device_id}${suffix}_irrigation_pump
            - delay: !lambda 'return (int) id(${area_id}_${device_id}${suffix}_irrigation_duration).state * 1000;'
            - switch.turn_off: ${area_id}_${device_id}${suffix}_irrigation_pump



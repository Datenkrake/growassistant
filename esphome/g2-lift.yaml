esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
# api:
#   encryption:
#     key: "JAyX4MVGjZ30F/mszlgUWvy3H57dbL+ykhgDhG9PueY="

ota:
  - platform: esphome
    password: "5b615b8d2e4823a03a99ceb3f997bc6a"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${area_id}-Lift Fallback Hotspot"
    password: "mtIjicW6W0Xe"

captive_portal:

esphome:
  name: g2-lift

####################################################################
# configure substitutions and friendly name
####################################################################

  area: ${area_id}
  friendly_name: ${area_id}_LIFT${suffix}

substitutions:
  area_id: G2
  suffix: ""
  #pin_door_switch: GPIO21
  pin_irrigation_output: GPIO16
  pin_circulation_output: GPIO17

####################################################################
# generic yaml for humidifiers below
####################################################################
globals:
  - id: ${area_id}_fan_speed_step${suffix}
    type: int
    restore_value: no
    initial_value: '0'
  - id: ${area_id}_door_open${suffix}
    type: bool
    restore_value: no
    initial_value: 'false'

mqtt:
  broker: !secret mqtt_broker
  username: !secret mqtt_username
  password: !secret mqtt_password
  topic_prefix: "${area_id}/lift"

stepper:
  - platform: a4988
    id: ${area_id}_lift_stepper${suffix}
    step_pin: GPIO6       # STEP pin
    dir_pin: GPIO5        # DIR pin
    max_speed: 2000 steps/s
    acceleration: 2000 #steps/s²
    deceleration: 2000 #steps/s²
    # Optional: Enable pin (uncomment if connected)
    # enable_pin: GPIO4
    # Optional: Sleep pin (uncomment if connected)
    # sleep_pin: GPIO16
    # Optional: Microsteps (requires additional wiring and configuration)
    # microsteps: 16 # done via MS pins on HW
    # Optional: Stepper steps per revolution (adjust based on your motor)
    # steps_per_revolution: 200

switch:
  - platform: template
    name: "Step Down [${area_id}${suffix}]"
    id: ${area_id}_step_down
    turn_on_action:
      # Move 150 steps forward
      - stepper.report_position:
          id: ${area_id}_lift_stepper${suffix}
          position: 0
      - stepper.set_target:
          id: ${area_id}_lift_stepper${suffix}
          target: 32000

  - platform: template
    name: "Step Up [${area_id}${suffix}]"
    id: ${area_id}_step_up
    turn_on_action:
      # Move 150 steps forward
      - stepper.report_position:
          id: ${area_id}_lift_stepper${suffix}
          position: 0
      - stepper.set_target:
          id: ${area_id}_lift_stepper${suffix}
          target: -32000
  
  # HHL = 8x mixrostepping, HHH = 16x
  # 8, with 80:1, 128000 steps per rotation
  - platform: gpio
    name: "MS1 HIGH [${area_id}${suffix}]"
    pin: GPIO20
    inverted: false
    restore_mode: ALWAYS_ON

  - platform: gpio
    name: "MS2 HIGH [${area_id}${suffix}]"
    pin: GPIO10
    inverted: false
    restore_mode: ALWAYS_ON

  - platform: gpio
    name: "MS3 LOW [${area_id}${suffix}]"
    pin: GPIO9
    inverted: true
    restore_mode: ALWAYS_OFF

  - platform: gpio
    name: "Lift Stepper Enable [${area_id}${suffix}]"
    pin: GPIO21
    inverted: true  # Active LOW: true if LOW enables the driver
    restore_mode: ALWAYS_ON  # Enabled by default on boot



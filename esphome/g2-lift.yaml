esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Enable Home Assistant API
# api:
#   encryption:
#     key: "JAyX4MVGjZ30F/mszlgUWvy3H57dbL+ykhgDhG9PueY="

ota:
  - platform: esphome
    password: "5b615b8d2e4823a03a99ceb3f997bc6a"

esphome:
  name: g2-lift

####################################################################
# configure substitutions and friendly name
####################################################################

  area: ${area_id}
  friendly_name: ${area_id}_${device_id}${suffix}

# Note for pinout on ESP32-C3 Supermini:
# Pin Functions
# GPIO0 / A0 (bottom right corner in top view with USB port on the top)
# GPIO1 / A1
# GPIO2 / A2 (external pull-up resistor and is a boot related pin)
# GPIO3 / A3
# GPIO4 / A4 / SCK
# GPIO5 / A5 / MISO
# GPIO6 / MOSI
# GPIO7 / SS
# GPIO8 / SDA
# GPIO9 / SCL (external pull-down resistor and is a boot related pin "BOOT button")
# GPIO10
# GPIO20 / RX
# GPIO21 / TX

substitutions:
  area_id: G2
  device_id: "LIFT"
  suffix: ""
  #pin_door_switch: GPIO21
  pin_irrigation_output: GPIO16
  pin_circulation_output: GPIO17

####################################################################
# generic yaml for humidifiers below
####################################################################
logger:
captive_portal:
wifi:
  !include includes/wifi_default.yaml

globals:
  - id: ${area_id}_${device_id}${suffix}_fan_speed_step
    type: int
    restore_value: no
    initial_value: '0'
  - id: ${area_id}_${device_id}${suffix}_door_open
    type: bool
    restore_value: no
    initial_value: 'false'

mqtt:
  broker: !secret mqtt_broker
  username: !secret mqtt_username
  password: !secret mqtt_password
  topic_prefix: "auto/${area_id}/${device_id}"
  log_topic: "debug/${area_id}/${device_id}"
  on_message: 
    topic: "G2/cola_detected/state/#"
    then:
      - if:
          condition:
            lambda: 'return x == "true";'
          then:
            - switch.turn_on: ${area_id}_${device_id}${suffix}_step_up

stepper:
  - platform: a4988
    id: ${area_id}_${device_id}${suffix}_stepper
    step_pin: GPIO6       # STEP pin
    dir_pin: GPIO5        # DIR pin
    max_speed: 2000 steps/s
    acceleration: 2000 #steps/s²
    deceleration: 2000 #steps/s²
    # Optional: Microsteps (requires additional wiring and configuration)
    # microsteps: 8 # done via MS pins on HW
    # Optional: Stepper steps per revolution (adjust based on your motor)
    # steps_per_revolution: 200

switch:
  - platform: gpio
    name: "Stepper Enable [${area_id}${suffix}]"
    id: ${area_id}_${device_id}${suffix}_stepper_enable
    pin: GPIO21
    inverted: true
    restore_mode: ALWAYS_OFF  # Start with driver asleep

  - platform: template
    name: "Step Down [${area_id}${suffix}]"
    id: ${area_id}_${device_id}${suffix}_step_down
    turn_on_action:
      - switch.turn_on: ${area_id}_${device_id}${suffix}_stepper_enable  # Wake up the driver
      - delay: 10ms 
      # Move 150 steps forward
      - stepper.report_position:
          id: ${area_id}_${device_id}${suffix}_stepper
          position: 0
      - stepper.set_target:
          id: ${area_id}_${device_id}${suffix}_stepper
          target: 32000
      - wait_until:
          condition:
            lambda: 'return id(${area_id}_${device_id}${suffix}_stepper).has_reached_target();'
      - switch.turn_off: ${area_id}_${device_id}${suffix}_stepper_enable  # Wake up the driver

  - platform: template
    name: "Step Up [${area_id}${suffix}]"
    id: ${area_id}_${device_id}${suffix}_step_up
    turn_on_action:
      - switch.turn_on: ${area_id}_${device_id}${suffix}_stepper_enable  # Wake up the driver
      - delay: 10ms 
      - stepper.report_position:
          id: ${area_id}_${device_id}${suffix}_stepper
          position: 0
      - stepper.set_target:
          id: ${area_id}_${device_id}${suffix}_stepper
          target: -32000
      - wait_until:
          condition:
            lambda: 'return id(${area_id}_${device_id}${suffix}_stepper).has_reached_target();'
      - switch.turn_off: ${area_id}_${device_id}${suffix}_stepper_enable  # Wake up the driver

  # HHL = 8x mixrostepping, HHH = 16x
  # 8, with 80:1, 128000 steps per rotation
  - platform: gpio
    name: "MS1 HIGH [${area_id}${suffix}]"
    pin: GPIO20
    inverted: false
    restore_mode: ALWAYS_ON

  - platform: gpio
    name: "MS2 HIGH [${area_id}${suffix}]"
    pin: GPIO10
    inverted: false
    restore_mode: ALWAYS_ON

  - platform: gpio
    name: "MS3 LOW [${area_id}${suffix}]"
    pin: GPIO9
    inverted: true
    restore_mode: ALWAYS_OFF


